services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      gunicorn core.asgi:application
      -k uvicorn.workers.UvicornWorker
      --bind 0.0.0.0:8080
      --workers 8
      --threads 2
      --worker-connections 1000
      --timeout 60
      --graceful-timeout 30
      --max-requests 5000
      --max-requests-jitter 500
      --log-level warning
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    expose:
      - "8080"
    ports:
      - "8080:8080"
    volumes:
      - django_static:/app/static
      - django_media:/app/media
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "timeout 5 bash -c '</dev/tcp/127.0.0.1/8080' || exit 1" ]
      interval: 30s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    depends_on:
      - web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - django_static:/app/static:ro
      - django_media:/app/media:ro
    restart: always

  db:
    image: postgres:15
    command: postgres -c max_connections=300
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - "5432"
    env_file:
      - .env
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    volumes:
      - redis_data:/data
    # Tashqariga port OCHMAYMIZ, faqat internal network
    restart: always

volumes:
  postgres_data:
  redis_data:
  django_static:
  django_media:
